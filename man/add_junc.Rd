% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_junc.R
\name{add_junc}
\alias{add_junc}
\title{modifies transcripts by applying splice-junctions}
\usage{
add_junc(tx, jx)
}
\arguments{
\item{tx}{transcripts a named \code{\link[GenomicRanges]{GRangesList}} with
transcripts defined as GRanges of exons.}

\item{jx}{splice junctions as GRanges objects}
}
\value{
a \code{\link[GenomicRanges]{GRangesList}} with altered transcripts.

The algorithm works in the following steps.
\itemize{
\item Get transcripts for which the whole transcript range contains \code{pos1} and
\code{pos2} as GRangesList of GRanges of exons
\item For each tx in transcripts do
\itemize{
\item if \code{pos1} overlaps an exon \code{e}:
shorten \code{e} to end at \code{pos1}
else:
get next exon \code{e} left of \code{pos}:
extend \code{e} to end in \code{pos1}
\item if \code{pos2} overlaps an exon \code{e}:
shorten \code{e} to start at \code{pos2}
else:
get next exon \code{e} right of \code{pos2}:
extend \code{e} to start in \code{pos2}
\item remove all exons completeley contained in the interval [\code{pos1}, \code{pos2}].
}
}

Limitations:
\itemize{
\item [ ] vectorize over multiple input junctions
\item [ ] Both junction positions in same exon (Exitrons) are ignored
\item [ ] consider multiple junctions in same transcripts
}

[ ]: R:\%20
[ ]: R:\%20
[ ]: R:\%20
}
\description{
modifies transcripts by applying splice-junctions
}
\examples{

}
