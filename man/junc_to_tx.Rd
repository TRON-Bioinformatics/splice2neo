% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/junc_to_tx.R
\name{junc_to_tx}
\alias{junc_to_tx}
\title{convert a \code{junc_id} into a dataset of altered transcript
\code{\link[GenomicRanges]{GRangesList}}.}
\usage{
junc_to_tx(chr, pos1, pos2, transcripts)
}
\arguments{
\item{chr}{chromosome}

\item{pos1}{start position of junction}

\item{pos2}{start position of junction}

\item{transcripts}{a GRangesList with transcripts defined as GRanges of exons
created by \code{GenomicFeatures::exonsBy(txdb, by = c("tx"), use.names = TRUE)}.}
}
\value{
a GRangesList with alternative transcripts.

The algorithm works in the following steps.
\itemize{
\item Get transcripts for which the whole transcript range contains \code{pos1} and
\code{pos2} as GRangesList of GRanges of exons
\item For each tx in transcripts do
\itemize{
\item if \code{pos1} overlaps an exon \code{e}:
shorten \code{e} to end at \code{pos1}
else:
get next exon \code{e} left of \code{pos}:
extend \code{e} to end in \code{pos1}
\item if \code{pos2} overlaps an exon \code{e}:
shorten \code{e} to start at \code{pos2}
else:
get next exon \code{e} right of \code{pos2}:
extend \code{e} to start in \code{pos2}
\item remove all exons completeley contained in the interval [\code{pos1}, \code{pos2}].
}
}

TODO:
\itemize{
\item [ ] vectorize over multiple input junctions
\itemize{
\item [ ] consider multiple junctions in same transcripts
}
\item [x] add \code{tx_name} as output column
\item [ ] Support junctions with both positions in the same exon
}

[ ]: R:\%20
[ ]: R:\%20
[x]: R:x
[ ]: R:\%20
}
\description{
convert a \code{junc_id} into a dataset of altered transcript
\code{\link[GenomicRanges]{GRangesList}}.
}
\examples{

junc_to_tx("chr2", 152389996, 152392205, toy_transcripts)

}
