% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exon_in_intron.R
\name{exon_in_intron}
\alias{exon_in_intron}
\title{Annotate if there is an exon within an intron}
\usage{
exon_in_intron(df, transcripts)
}
\arguments{
\item{df}{A data.frame with splice junctions in rows and at least the columns:
\itemize{
\item \code{junc_id} junction id consisting of genomic coordinates
\item \code{tx_id} transcript id consisting of genomic coordinates
}}

\item{transcripts}{a GRangesList with transcripts defined as GRanges of exons
created by \code{GenomicFeatures::exonsBy(txdb, by = c("tx"), use.names = TRUE)}.}
}
\value{
A data.frame as the input but with potentially multiple rows
and with the additional column(s):
- \code{exon_free}: Boolean indicating if the given IR junctions is exon-free. Will return NA for non-intron retentions.
}
\description{
Annotate if there is an exon within an intron
}
\examples{

library(dplyr)

toy_tx <- GenomicRanges::GRangesList(list(
tx1 = GenomicRanges::GRanges(
 c("1", "1", "1"),
IRanges::IRanges(
   c(2, 15, 27),
 c(8, 23, 35),
),
strand = c("+", "+", "+")
),
tx1a = GenomicRanges::GRanges(
 c("1" ),
IRanges::IRanges(
 c(3),
 c(10),
),
strand = c("+")
)))

df <- tibble(
 junc_id = c("1:8-9:+", "1:14-15:+"),
 tx_id = c("tx1", "tx1")
)
df1 <- df \%>\%
 exon_in_intron(transcripts = toy_tx)

}
